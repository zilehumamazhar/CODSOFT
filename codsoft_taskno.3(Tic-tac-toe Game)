#include <iostream>
#include <vector>
#include <string>

using namespace std;

void displayBoard(const vector<vector<char>>& board);
bool checkWin(const vector<vector<char>>& board, char player);
bool checkDraw(const vector<vector<char>>& board);
void switchPlayer(char& currentPlayer);

int main()
{
    vector<vector<char>> board(3, vector<char>(3, ' '));
    char currentPlayer = 'X';
    bool gameover = false;

    while (!gameover) 
    {
        displayBoard(board);
        int row, col;
        cout << "Player " << currentPlayer << "'s turn. Enter row (1-3) and column (1-3) separated by space: ";
        cin >> row >> col;

   
        row--;
        col--;

        if (row < 0 || row >= 3 || col < 0 || col >= 3 || board[row][col] != ' ') 
        {
            cout << "Invalid move. Please try again.\n";
            continue;
        }

        board[row][col] = currentPlayer;

        if (checkWin(board, currentPlayer))
        {
            displayBoard(board);
            cout << "Player " << currentPlayer << " wins!\n";
            gameover = true;
        } 
        else if (checkDraw(board))
        {
            displayBoard(board);
            cout << "It's a draw!\n";
            gameover = true;
        } 
        else
        {
            switchPlayer(currentPlayer);
        }
    }

    char playAgain;
    cout << "Do you want to play again? (y/n): ";
    cin >> playAgain;
    if (playAgain == 'y' || playAgain == 'Y') 
    {
        
        main();
    }

    return 0;
}

void displayBoard(const vector<vector<char>>& board)
{
    cout << "-------------\n";
    for (const auto& row : board)
    {
        cout << "| ";
        for (char cell : row) {
            cout << cell << " | ";
        }
        cout << "\n-------------\n";
    }
}

bool checkWin(const vector<vector<char>>& board, char player) 
{
   
    for (int i = 0; i < 3; ++i) {
        if ((board[i][0] == player && board[i][1] == player && board[i][2] == player) ||
            (board[0][i] == player && board[1][i] == player && board[2][i] == player)) {
            return true;
        }
    }
    if ((board[0][0] == player && board[1][1] == player && board[2][2] == player) ||
        (board[0][2] == player && board[1][1] == player && board[2][0] == player)) 
        {
        return true;
    }
    return false;
}

bool checkDraw(const vector<vector<char>>& board) 
{
   
    for (const auto& row : board) 
    {
        for (char cell : row) 
        {
            if (cell == ' ')
            {
                return false;
            }
        }
    }
    return true;
}

void switchPlayer(char& currentPlayer)
{
    currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
}

